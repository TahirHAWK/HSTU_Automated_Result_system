**continue to make register and login feature and set up session with dashboard view.

new package.json: 
    "@babel/core": "^7.4.5",
    "@babel/preset-env": "^7.4.5",
    "axios": "^0.19.0",
    "babel-loader": "^8.0.6",
    "bcryptjs": "^2.4.3",
    "connect-flash": "^0.1.1",
    "connect-mongo": "^3.0.0",
    "cors": "^2.8.5",
    "csurf": "^1.10.0",
    "dompurify": "^1.0.10",
    "dotenv": "^8.0.0",
    "ejs": "^2.6.1",
    "express": "^4.16.4",
    "express-session": "^1.16.1",
    "jsonwebtoken": "^8.5.1",
    "marked": "^0.6.2",
    "md5": "^2.2.1",
    "mongodb": "^3.7.2",
    "nodemon": "^1.19.0",
    "sanitize-html": "^1.20.1",
    "socket.io": "^2.2.0",
    "validator": "^11.0.0",
    "webpack": "^4.34.0",
    "webpack-cli": "^3.3.4"

Old package.json:
    "bcryptjs": "^2.4.3",
    "connect-flash": "^0.1.1",
    "connect-mongo": "^4.6.0",
    "ejs": "^3.1.6",
    "express": "^4.17.1",
    "express-session": "^1.17.2",
    "mongodb": "^4.1.3",
    "nodemon": "^2.0.13",
    "validator": "^13.6.0"


eta amr academic ekta software project er jnno data collection er form, kindly sobai fillup krben asha kori, nij department ar course niye jar jeituku idea ase fillup krben, department er chariman er form e tadr simple data gula diben, same goes to teachers.

Teacher der info er jnno ei form:
https://forms.gle/dMvEwA7vB1yJCMqv8

Eta course er data collection er jnno, jotogula possible course data diben sobai:
https://forms.gle/H5oPhL9L6a564BmJ7

ar eta department er chairman, course, teachers der data collection er jnno, 
https://forms.gle/GyCrC9hyjUC8nX17A





let x = [  {
    _id: '6173af4e2b63652f4c6e09c6',
    degree: 'CSE',
    levelSemester: 'level 3 semester 1',
    course_code: 'CSE 303',
    course_title: 'Database',
    credit: '3.00',
    assignedTeacher: 'Md. Abu Marjan',
    assignedTeacherID: '61740af52b63652f4c6e09e9',
    finalSubmission: true,
    assignedDepartment: 'CSE'
  }, {}, {}, {'y': '3'}]


let newArray = x.filter(value => Object.keys(value).length !== 0);
console.log("after, ", x, newArray)


Admin.prototype.cleanEmptyObjectArray =function(calculatedData){
// remove empty objects
    let cleanCalculatedData = calculatedData.filter(value => Object.keys(value).length !== 0);
// remove duplicates
    cleanCalculatedData = cleanCalculatedData.filter((v,i,a)=>a.findIndex(t=>(t.levelSemester === v.levelSemester && t.totalCredit === v.totalCredit))===i)
    return cleanCalculatedData
}

Admin.prototype.findFinalSubmits = function(){
    let findSubmitsPromise = new Promise((resolve, reject) => {
        courseInfo.find({degree: this.data.registerDepartment,  finalSubmission: true}).toArray().then(
            (result) => {
                console.log(result)
                // finding totalCredit and totalCourses done in one specific semester.
            let resultObject = {}
            let totalCredit = 0
            let courseCount = 0
            let calculatedData = []
            for(i = 1; i <= 4; i ++){
                for(j = 1; j <= 2; j++ ){
                let levelSemester
                result.forEach((course) => {
                if(course.levelSemester == ('level '+  i +  ' semester '+  j )){
                    levelSemester = 'level '+  i +  ' semester '+  j 
                    totalCredit = (totalCredit + Number(course.credit))
                    courseCount++
                    resultObject = {totalCredit: totalCredit, courseCount: courseCount, levelSemester}
                } else{
                    totalCredit = 0
                    courseCount = 0
                }
                    calculatedData.push(resultObject)
                })
            }
            } 
            // removing empty objects and duplicates from calculateData array

           calculatedData= this.cleanEmptyObjectArray(calculatedData)

            console.log('from findFinalSubmits', (calculatedData))
            resolve()
        }
        ).catch((error) => {
            console.log('cannot fetch from db', error)
            reject(error)
        })
    })

    return findSubmitsPromise
}



